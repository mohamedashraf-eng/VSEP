# CMake Version Check
cmake_minimum_required(VERSION 3.14)

# Project
project(bootloader_swc 
        LANGUAGES C CXX
        VERSION "1.0.0"
        DESCRIPTION "bootloader_swc")

set(SOFTWARE_COMPONENT "bootloader_swc")
##############################################################################
# Include Common Compilation Settings                                       #
##############################################################################

include(tools/cmake/bootloader_swc_compile.cmake)

##############################################################################
# Build Configuration                                                        #
##############################################################################

# Compilation Mode: Only build the library
if(MODE STREQUAL "COMPILING")
  add_executable(bootloader_swc ${bootloader_swc_sources_list})
  target_compile_options(bootloader_swc PRIVATE ${bootloader_swc_compile_options})
  target_include_directories(bootloader_swc PRIVATE ${bootloader_swc_includes})
  target_compile_definitions(bootloader_swc PRIVATE ${bootloader_swc_defines})
  target_link_libraries(bootloader_swc PRIVATE ${bootloader_swc_libs})

  # Installation
  install( PROGRAMS $<TARGET_FILE:bootloader_swc>  PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ DESTINATION ${CMAKE_BINARY_DIR}/../output/build RENAME cf4a_gp_bootloader.out)
  install( FILES    $<TARGET_FILE:bootloader_swc>.map DESTINATION ${CMAKE_BINARY_DIR}/../output/build RENAME cf4a_gp_bootloader.map)

  # Define the paths for input and output files
  set(ELF_FILE "${CMAKE_BINARY_DIR}/../output/build/cf4a_gp_bootloader.elf")
  set(HEX_FILE "${CMAKE_BINARY_DIR}/../output/build/cf4a_gp_bootloader.hex")
  set(BIN_FILE "${CMAKE_BINARY_DIR}/../output/build/cf4a_gp_bootloader.bin")

  # Command to generate .elf file
  add_custom_command(TARGET bootloader_swc POST_BUILD
      # OUTPUT ${ELF_FILE}
      DEPENDS bootloader_swc
      COMMAND ${CMAKE_OBJCOPY} -O elf32-littlearm $<TARGET_FILE:bootloader_swc> ${ELF_FILE}
      COMMENT "Generating .elf file"
  )

  # Command to generate .hex file from .elf file
  add_custom_command(TARGET bootloader_swc POST_BUILD
      # OUTPUT ${HEX_FILE}
      DEPENDS bootloader_swc
      COMMAND ${CMAKE_OBJCOPY} -O ihex ${ELF_FILE} ${HEX_FILE}
      COMMENT "Generating .hex file"
  )

  add_custom_command(TARGET bootloader_swc POST_BUILD
      # OUTPUT ${HEX_FILE}
      DEPENDS bootloader_swc
      COMMAND ${CMAKE_OBJCOPY} -O binary ${ELF_FILE} ${BIN_FILE}
      COMMENT "Generating .bin file"
  )

elseif (MODE STREQUAL "TESTING")
  include(tools/cmake/bootloader_swc_tests.cmake)
  add_executable(bootloader_swc_test ${bootloader_swc_tests_sources_list})
endif()
